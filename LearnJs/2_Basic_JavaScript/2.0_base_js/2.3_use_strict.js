// 'use strict'
/**
 * 'use strict' включает строгий режим выполнения JavaScript, заставляет код обрабатываться в строгом режиме.
 * В строгом режиме интерпретатор будет явно выбрасывать ошибки на действия, которые ранее пропускал. Если строгий режим был включён, то отключить его для файла уже нельзя.
 * Этим режимом достигается то, что потенциально опасные конструкции языка JS будут запрещены и приведут к исключению.
 *
 * Эта строка должна располагаться в самом начале скрипта, иначе строгий режим не будет работать.
 *
 * // код здесь обрабатывается в неограниченном режиме
 * function f() {
 *   "use strict";
 *   // код здесь обрабатывается в строгом режиме
 * }
 * // код здесь обрабатывается в неограниченном режиме
 */

/**
 * Ограничения "use strict"
 */

// 1. Нельзя использовать переменные без объявления
/**
 * 'use strict'
 *
 * const name = 'Anna'
 * console.log(name) => Anna
 *
 *
 * age = 24
 * console.log(age) Uncaught ReferenceError: age is not defined
 *
 * Без строгого режима интерпретатор в таком случае создаст переменную age в глобальной области видимости.
 * Если выполнять код из примера в консоли браузера без 'use strict', то все выполнится без ошибок, а в глобальный объект window запишется поле age со значением 24.
 */

// 2. Параметры функции не могут иметь одинаковые имена
/**
 * 'use strict'
 * // Uncaught SyntaxError: Duplicate parameter name not allowed in this context
 * function sum(a, b, a) {}
 *
 * function sum(a, b, a) {
 *   console.log(a)
 *   console.log(b)
 * }
 * sum(1, 2, 3) // Выведет 3 и 2, первый аргумент потерян навсегда
 */

// 3. Другое поведение this

/**
 * При включённом строгом режиме this больше не будет по умолчанию ссылаться на глобальный объект.
 * 'use strict'
 * function logThis() { console.log(this) }
 * logThis() => Выведет undefined
 *
 * Без 'use strict' если вызывать функцию в глобальном контексте (например в консоли браузера), то this всегда будет ссылаться на глобальный объект.
 */

// 4. Запрещено использовать зарезервированные слова
/**
 * В строгом в режиме запрещено использовать в коде некоторые слова, которые были специально зарезервированы для того, чтобы использовать их в будущем.
 * Это слова implements, interface, let, package, private, protected, public, static, yield
 */

/**
 * Нельзя добавлять в примитивы свойства
 *
 * В нестрогом режиме будет undefined
 */
{
    "use strict";
    let str = "Hello";
    str.something = 5; // Cannot create property 'something' on string 'Hello'
    console.log(str.something); // ?

}