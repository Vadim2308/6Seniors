/**
 * Глобальный объект предоставляет переменные и функции, доступные в любом месте программы.
 * По умолчанию это те, что встроены в язык или среду исполнения.
 */

/**
 * Браузер - window
 * Node.js — global
 *
 * globalThis - стандартизированное имя для глобального объекта, которое должно поддерживаться в любом окружении.
 */

// Ко всем свойствам глобального объекта можно обращаться напрямую:
{
    alert("Привет");
    // это то же самое, что и
    window.alert("Привет");
}

{
    globalThis.prop = 'it\'s global prop';
    console.log(prop);                      // Output: it's global prop
    console.log(globalThis.prop);           // Output: it's global prop
}

/**
 * В браузере глобальные функции и переменные, объявленные с помощью var становятся свойствами глобального объекта
 * То же самое касается функций, объявленных с помощью синтаксиса Function Declaration (выражения с ключевым словом function в основном потоке кода, не Function Expression)
 *
 * В современных проектах, использующих JavaScript-модули, такого не происходит.
 */
{
    var gVar = 5;
    alert(window.gVar); // 5 (становится свойством глобального объекта)
}

/**
 * Полифилы
 * В современных проектах, использующих JavaScript-модули, такого не происходит.
 */
{
    if (!window.Promise) {
        window.Promise = ... // собственная реализация современной возможности языка
    }
}