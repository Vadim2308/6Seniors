//–ó–∞–¥–∞—á–∞ 1 - –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—Ç–æ–¥–∞ Array.from, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—å–µ–∫—Ç –∏–ª–∏ –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤ –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤. –ï—Å–ª–∏ –∏—Ç–µ—Ä–∞—Ç–æ—Ä –Ω–µ –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω, —Ç–æ –≤—ã–∫–∏–Ω—É—Ç—å –æ—à–∏–±–∫—É (–æ—à–∏–±–∫–∞ –≤—ã–∫–∏–¥—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ 'throw new Error')

function arrayFrom(iterable){
  const iterator = iterable[Symbol.iterator]
  if(!iterator){
    throw new Error('iterator is not implemented')
  }
  return [...iterable]

}
console.log(arrayFrom('üòÇüòÇüòÇ')); // [üòÇ,üòÇ,üòÇ]
console.log(arrayFrom('aboba')); // ['a','b','o','b','b']
console.log(arrayFrom({}));
// //----------------------------------------------------------

//–ó–∞–¥–∞—á–∞ 2 - –¥–∞–Ω –æ–±—å–µ–∫—Ç students, —á—Ç–æ–±—ã –ø—Ä–∏ –≤—ã–∑–æ–≤–µ for ..of –æ–Ω –≤—ã–≤–µ–ª –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
const students = {
     montenegro : ['vshirokov'],
     vladikavkaz : ['tkenz'],
     yaroslavl : ['polo_js'],
     belgorod : ['novicky'],
     [Symbol.iterator]() {
          const values = Object.values(this).flat();
          let index = 0
          return {
            next(){
               if(index < values.length){
                 return {done:false,value:values[index++]};
               }else {
                 return {done:true};
               }
            }
         }
     }
 };

 for (let student of students) {
     console.log(student);
 }

//---------------------------------------------------------------------

//–ó–∞–¥–∞—á–∞ 3 - –î–∞–Ω –º–∞—Å—Å–∏–≤, –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –∏ for..of –≤—ã–≤–µ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ

const arr = ["z","o","p","a"];

arr[Symbol.iterator] = function () {
  let index = this.length - 1
  const arr = this
  return {
    next(){
      if(index >= 0){
        return {value:arr[index--],done:false}
      }else {
        return {done:true}
      }
    }
  }
};

for (const item of arr) {
  console.log(item);
}
//----------------------------------------------------------------------

// –ó–∞–¥–∞—á–∞ 4 - –Ω–∞–π–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤–µ —Å—Ç—Ä–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã

const array = ["apple", "banana", "pear", "kiwi", "grape"];
const hasUniqueChars = array.some(
  el => {
    const uniq = [...new Set(el)].join('')
    return el === uniq
  }
);
console.log(hasUniqueChars);

//------------------------------------------------------------------------

//–ó–∞–¥–∞—á–∞ 5 - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å–æ–¥–µ—Ä–∂–∞—Ç –ª–∏ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞.

const arrayU = ["APPLE", "BANANA", "PEAR", "KIWI", "GRAPE"];

const isUpperedCase = arrayU.every(el=> el === el.toUpperCase())

console.dir(isUpperedCase)
//------------------------------------------------------------------------

//–ó–∞–¥–∞—á–∞ 6 - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –º–∞—Å—Å–∏–≤ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥—Ä—É–≥–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

const zopa = [1, 2, 3, 4, 5];
const subset = [3, 4];

const isIncludes = subset.every(el=>zopa.includes(el))

console.log(isIncludes)


//------------------------------------------------------------------------

// –ó–∞–¥–∞—á–∞ 7 - –Ω–∞–π—Ç–∏ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ–≥–æ –∏—Å–ø—Ä–∞–≤–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –±–µ–∑ –¥–µ—Ñ—Ñ–µ—Ç–æ–≤

const equipmentStore = [
  { name: "laptop", quantity: 10, price: 1000, defective: 1, condition: "new" },
  { name: "smartphone", quantity: 20, price: 500, defective: 3, condition: "used" },
  { name: "printer", quantity: 5, price: 200, defective: 0, condition: "new" },
  { name: "monitor", quantity: 8, price: 300, defective: 2, condition: "used" },
];

const sum = equipmentStore.filter(el=>el.defective === 0 && el.condition === 'new').reduce((acc,item)=> acc + item.price * item.quantity,0)

console.log(sum)