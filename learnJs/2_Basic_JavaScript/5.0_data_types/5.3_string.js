/**
 * –õ–∏—Ç–µ—Ä–∞–ª—ã —Å—Ç—Ä–æ–∫ - "", '', ``
 */

/**
 * –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –±–µ–∫—Ç–∏–∫–æ–≤ - –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –Ω–∞ —Å–ª–µ–¥.—Å—Ç—Ä–æ–∫–∏. –°–∏–º–≤–æ–ª –ø–µ—Ä–µ–Ω–æ—Å–∞ - \n
 */
{
    let guestList = `Guests:
     * John
     * Pete
     * Mary
    `;
}

/**
 * C–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã (\n, \", \' \t) –∏ —Ç.–¥.
 * \ => —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
 * \n ‚Äî –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏;
 * \t ‚Äî —Ç–∞–±—É–ª—è—Ü–∏—è, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ Tab.
 */
{
    console.log( 'I\'m the Walrus!' ); // I'm the Walrus!
    console.log( `I'm the Walrus!` ); // I'm the Walrus!
}

/**
 * –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
 * –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ –≤ —Ç–µ—Ö —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —ç–º–æ–¥–∑–∏.
 */
{
    console.log( `My\n`.length ); // 3
}

/**
 * –î–æ—Å—Ç—É–ø –∫ —Å–∏–º–≤–æ–ª–∞–º
 * –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ [] –∏–ª–∏ –º–µ—Ç–æ–¥ at || charAt.
 */
{
    let str = `Hello`;
    // –ø–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª
    console.log( str[0] ); // H

    console.log(str.at(0)); // H
    console.log(str.charAt(0)); // H

    // –ø–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª
    console.log(str[str.length - 1]); // o
    console.log(str.at(-1));
    console.log(str.charAt(-1)); // H
}

/**
 * –¶–∏–∫–ª—ã for in for of
 */
{
    const str = 'aDSA';

    for (const key of str) {
        console.log(key); // aDSA
    }
    for (const key in str) {
        console.log(key); // 0123
    }
}

/**
 * C—Ç—Ä–æ–∫–∏ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã, —Ç.–µ. –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∫–∞–∫ —Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–æ–∫—É –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç. –¢–∞–∫–∂–µ –º–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫ –Ω–µ –º—É—Ç–∏—Ä—É—é—Ç –¥–∞–Ω–Ω—ã–µ
 *
 */
{
    let str = 'Hi';
    str[0] = 'h'; // –æ—à–∏–±–∫–∞
    console.log( str[0] ); // H
}

/**
 * –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞
 */
{
    console.log( 'Interface'.toUpperCase() ); // INTERFACE
    console.log( 'Interface'.toLowerCase() ); // interface
    console.log( 'Interface'[0].toLowerCase() ); // 'i'
}

/**
 * –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
 */
{
    // str.indexOf - –Ω–∞–π–¥–µ—Ç –∏–Ω–¥–µ–∫—Å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∞
    let str = 'Widget with id';
    console.log( str.indexOf('Widget') ); // 0, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ 'Widget' –Ω–∞–π–¥–µ–Ω–∞ –≤ –Ω–∞—á–∞–ª–µ
    console.log( str.indexOf('widget') ); // -1, —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç, –ø–æ–∏—Å–∫ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É
    console.log( str.indexOf("get") ); // 3
    console.log( str.indexOf("id") ); // 1, –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ "id" –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ 1 (..idget with id)
    {
        // –ï—Å—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç,—Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫
        let str = 'Widget with id';
        console.log( str.indexOf('id', 2) ) // 12
    }
    {
        /**
         * –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –≤—Ö–æ–∂–¥–µ–Ω–∏–π –≤ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª
         */
        let str = '–û—Å–ª–∏–∫ –ò–∞-–ò–∞ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –Ω–∞ –≤–∏–∞–¥—É–∫';
        let target = '–ò–∞'; // —Ü–µ–ª—å –ø–æ–∏—Å–∫–∞
        let pos = 0;

        while (true) {
            const position = str.indexOf(target, pos);
            if (position === -1) break;
            console.log(`position ${position}`); //0,6
            pos = position + 1;
        }
    }
    // str.lastIndexOf(substr, position) = –∏—â–µ—Ç —Å –∫–æ–Ω—Ü–∞
    // P.S. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ!
    {
        let str = '–û—Å–ª–∏–∫ –ò–∞-–ò–∞ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –Ω–∞ –≤–∏–∞–¥—É–∫';
        let target = '–ò–∞'; // —Ü–µ–ª—å –ø–æ–∏—Å–∫–∞
        console.log(str.lastIndexOf("–Ω–∞")) // 22.
    }
}

    /**
     * includes
     * –ú–µ—Ç–æ–¥ includes() –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–∏–º–≤–æ–ª—ã –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
     * –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–º–≤–æ–ª—ã, –∏ false –µ—Å–ª–∏ –Ω–µ—Ç.
     * –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ú–µ—Ç–æ–¥ includes() —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É.
     */

/**
 * –¢—Ä—é–∫ —Å –ø–æ–±–∏—Ç–æ–≤—ã–º –ù–ï
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —á–∏—Å–ª–æ –≤ 32 —Ä–∞–∑—Ä—è–¥–Ω–æ–µ —á–∏—Å–ª–æ, –¥—Ä–æ–±–∏ –æ—Ç—Ä–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è. –£–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ –≤ —É—Å–ª–æ–≤–∏–∏ –Ω–∞–¥–æ –∏—Å–∫–ª—é—á–∏—Ç—å -1 –∏–Ω–¥–µ–∫—Å
 * –ü—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å:  if (~str.indexOf(‚Ä¶)) –æ–∑–Ω–∞—á–∞–µ—Ç ¬´–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ¬ª.
 */
{
    console.log( ~2 ); // -3, —Ç–æ –∂–µ, —á—Ç–æ -(2+1)
    console.log( ~1 ); // -2, —Ç–æ –∂–µ, —á—Ç–æ -(1+1)
    console.log( ~0 ); // -1, —Ç–æ –∂–µ, —á—Ç–æ -(0+1)
    console.log( ~-1 ); // 0, —Ç–æ –∂–µ, —á—Ç–æ -(-1+1)

    let str = "Widget";
    if (~str.indexOf("Widget")) {
        console.log( '–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –µ—Å—Ç—å' ); // —Ä–∞–±–æ—Ç–∞–µ—Ç
    }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
 * –í JavaScript –µ—Å—Ç—å 3 –º–µ—Ç–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏: substring, substr –∏ slice.
 */
{
    // str.slice(start [, end])
    let str = "stringify";
    console.log( str.slice(0, 5) ); // 'strin', —Å–∏–º–≤–æ–ª—ã –æ—Ç 0 –¥–æ 5 (–Ω–µ –≤–∫–ª—é—á–∞—è 5)
    console.log( str.slice(0, 1) ); // 's', –æ—Ç 0 –¥–æ 1, –Ω–µ –≤–∫–ª—é—á–∞—è 1, —Ç. –µ. —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ 0
    console.log( str.slice(2) ); // ringify, —Å –ø–æ–∑–∏—Ü–∏–∏ 2 –∏ –¥–æ –∫–æ–Ω—Ü–∞
    console.log( str.slice(-4, -1) ); // gif
}
{
    /**
     * str.substring(start [, end])
     * –≠—Ç–æ ‚Äî –ø–æ—á—Ç–∏ —Ç–æ –∂–µ, —á—Ç–æ –∏ slice, –Ω–æ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å start –±–æ–ª—å—à–µ end.
     * –ï—Å–ª–∏ start –±–æ–ª—å—à–µ end, —Ç–æ –º–µ—Ç–æ–¥ substring —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫, –∫–∞–∫ –µ—Å–ª–∏ –±—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã –±—ã–ª–∏ –ø–æ–º–µ–Ω—è–Ω—ã –º–µ—Å—Ç–∞–º–∏.
     */
    let str = "stringify";
    console.log( str.substring(2, 6) ); // "ring"
    console.log( str.substring(6, 2) ); // "ring"
}
{
    @deprecated
    // str.substr(start [, length])
    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ –æ—Ç start –¥–ª–∏–Ω—ã length.
    let str = "stringify";
    // ring, –ø–æ–ª—É—á–∞–µ–º 4 —Å–∏–º–≤–æ–ª–∞, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ 2
    console.log( str.substr(2, 4) );
}

/**
 * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫
 * –ß—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —á—Ç–æ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –±–æ–ª—å—à–µ –¥—Ä—É–≥–æ–π, JavaScript –∏—Å–ø–æ–ª—å–∑—É–µ—Ç ¬´–∞–ª—Ñ–∞–≤–∏—Ç–Ω—ã–π¬ª –∏–ª–∏ ¬´–ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π¬ª –ø–æ—Ä—è–¥–æ–∫.
 * –°–∏–º–≤–æ–ª—ã —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è –ø–æ –∏—Ö –∫–æ–¥–∞–º. –ë–æ–ª—å—à–∏–π –∫–æ–¥ ‚Äî –±–æ–ª—å—à–∏–π —Å–∏–º–≤–æ–ª.
 * –í JavaScript –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-16, —Å–∞–º–∞—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω–∞—è –≤ –º–∏—Ä–µ.
 * –¢–∞–±–ª–∏—Ü–∞ —ç—Ç–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –±–æ–ª—å—à–∞—è, —á—Ç–æ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –≤—Å–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–ª—Ñ–∞–≤–∏—Ç—ã –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞–ø–∏—Å–∏, –Ω–æ –∏ —à—É–º–µ—Ä—Å–∫—É—é –∫–ª–∏–Ω–æ–ø–∏—Å—å, –∏ –¥—Ä–µ–≤–Ω–µ–µ–≥–∏–ø–µ—Ç—Å–∫–∏–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã.
 * –≠–º–æ–¥–∑–∏ —Ç–æ–∂–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –≤ —ç—Ç–æ–π —Ç–∞–±–ª–∏—Ü–µ, –ø–æ—ç—Ç–æ–º—É –Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ –Ω–∏—á–µ–≥–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –∏—Ö üôå
 */
{
    console.log( '–Ø' > '–ê' ); // true
    console.log( '–ö–æ—Ç—ã' > '–ö–æ–¥–∞' ); // true
    console.log( '–°–æ–Ω–Ω—ã–π' > '–°–æ–Ω' ); // true
    // –°—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –±–æ–ª—å—à–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö:
    console.log( 'a' > 'Z' ); // true
}

/**
 * –£ –ª—é–±–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –µ—Å—Ç—å –∫–æ–¥.
 *      str.codePointAt() - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –Ω–∞—Ö–æ–¥—è—â–µ–≥–æ—Å—è –Ω–∞ n-–π –ø–æ–∑–∏—Ü–∏–∏
 *      String.fromCodePoint(code) - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞, –∏–º–µ—é—â–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∫–æ–¥
 */

{
    console.log( "z".codePointAt(0) ); // 122.
    console.log( "Z".codePointAt(0) ); // 90

    console.log( String.fromCodePoint(90) ); // Z

    /**
     * –ü—Ä–∏–º–µ—Ä —Ü–∏–∫–ª–∞ —Å –∞–ª—Ñ–∞–≤–∏—Ç–æ–º
     */
    const startIndex = '–∞'.codePointAt(0);
    const endIndex = '—è'.codePointAt(0);

    const result = []

    for(let i = startIndex; i <= endIndex;i++){
        result.push(String.fromCodePoint(i))
    }

    console.log(result)
}

/**
 * –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫
 * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –ª—É—á—à–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ str.localeCompare(str2)
 */
{
    // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –µ—Å–ª–∏ str –º–µ–Ω—å—à–µ str2.
    // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –µ—Å–ª–∏ str –±–æ–ª—å—à–µ str2.
    // 0, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω—ã.
    const str = 'a'
    const str2 = 'b'
    console.log(str.localeCompare(str2));
}

/**
 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –±—É–∫–≤—ã —ë. –û–Ω–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –ø–æ—Å–ª–µ –Ø –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ –ø–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏. –î–ª—è –ø—Ä–∞–∏–≤–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å new Intl.Collator("ru-RU")
 * https://www.youtube.com/watch?v=M4yQGGEFb8U
 */