/**
 * Функции нужны для вынесения повторяющейся логики
 * Структура функции: function имя(параметры) {...тело...}
 * Переменные, объявленные внутри функции, видны только внутри этой функции.
 * У функции есть доступ к внешним переменным. Функция обладает полным доступом к внешним переменным и может изменять их значение.
 * Внешняя переменная используется, только если внутри функции нет такой локальной.
 * Если одноимённая переменная объявляется внутри функции, тогда она перекрывает внешнюю.
 *
 * Переменные, объявленные снаружи всех функций, такие как внешняя переменная userName в вышеприведённом коде – называются глобальными.
 *
 * При объявлении функции в () указываются "параметры". При вызове функции передаем "аргументы"
 *
 * Переданные значения копируются в локальные переменные, указанные в параметрах функции
 * Примитивы в параметрах копируются по значению, не примитивы по ссылке.
 *
 * Значения по умолчанию
 * Если при вызове функции аргумент не был указан, то его значением становится undefined.
 * Пример добавления по умолчанию: function showMessage(from, text = "текст не добавлен") {}
 * showMessage("Вадим", undefined) || showMessage("Вадим"). В обоих случаях второй параметр подставится по умолчанию
 *
 * Возврат значения
 * если функция ничего не возвращает, или после return не стоит никакой переменной или сущности, возвращаемое значение === undefined
 * Директива return может находиться в любом месте тела функции. Как только выполнение доходит до этого места, функция останавливается
 */